import Link from "next/link"
import { Button } from "@/components/ui/button"
import { Bot, ArrowLeft } from "lucide-react"
import { CharacterCard } from "@/components/characters/character-card"
import { RecommendedCharacterCard } from "@/components/characters/recommended-character-card"
import { apiService } from "@/lib/api"
import { ApiPlaceholder } from "@/components/ui/api-placeholder"

export default async function CharactersPage() {
  const { characters } = await apiService.getCharacters()
  const { character: recommendedCharacter } = await apiService.getRecommendedCharacter()

  if (!characters || !recommendedCharacter) {
    return <ApiPlaceholder
      title="–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π"
      description="–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ–∑–∂–µ."
      isError={true}
    />
  }

  return (
    <div className="min-h-screen bg-gradient-light">
      {/* Header */}
      <header className="border-b bg-white/80 backdrop-blur-sm sticky top-0 z-50">
        <div className="container mx-auto px-4 py-4 flex items-center justify-between">
          <div className="flex items-center gap-4">
            <Link href="/">
              <Button variant="ghost" size="sm">
                <ArrowLeft className="h-4 w-4 mr-2" />
                –ù–∞–∑–∞–¥
              </Button>
            </Link>
            <div className="flex items-center gap-2">
              <Bot className="h-8 w-8 text-brand-600" />
              <span className="text-2xl font-bold text-gradient-brand">AI Characters</span>
            </div>
          </div>
          <Link href="/generator">
            <Button className="bg-gradient-brand hover:bg-gradient-brand-hover">–°–æ–∑–¥–∞—Ç—å —Å–≤–æ–µ–≥–æ</Button>
          </Link>
        </div>
      </header>

      <div className="container mx-auto px-4 py-8">
        <div className="text-center mb-12">
          <h1 className="text-4xl md:text-5xl font-bold mb-4 text-gradient-brand">–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞</h1>
          <p className="text-xl text-gray-600 max-w-2xl mx-auto">
            –ì–æ—Ç–æ–≤—ã–µ –ò–ò –ø–µ—Ä—Å–æ–Ω–∞–∂–∏ —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞–º–∏ –∏ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è–º–∏
          </p>
        </div>

        {/* –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã–π –ø–µ—Ä—Å–æ–Ω–∞–∂ */}
        <div className="mb-12">
          <div className="text-center mb-6">
            <h2 className="text-2xl md:text-3xl font-bold text-gray-800 mb-2">üåü –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –¥–ª—è –≤–∞—Å</h2>
            <p className="text-gray-600">–ü–µ—Ä—Å–æ–Ω–∞–∂, –∏–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</p>
          </div>
          <RecommendedCharacterCard character={recommendedCharacter} />
        </div>

        {/* –í—Å–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∏ */}
        <div className="mb-8">
          <h2 className="text-2xl font-bold text-gray-800 mb-6 text-center">–í—Å–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∏</h2>
        </div>

        <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 md:gap-6">
          {characters.map((character) => (
            <CharacterCard key={character.id} character={character} />
          ))}
        </div>
      </div>
    </div>
  )
}
